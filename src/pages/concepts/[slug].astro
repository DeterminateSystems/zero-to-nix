---
import type { GetStaticPaths } from "astro";
import Admonition from "../../components/mdx/Admonition.astro";
import NixStorePath from "../../components/mdx/NixStorePath.astro";
import Layout from "../../layouts/Layout.astro";
import HorizontalContainer from "../../components/HorizontalContainer.astro";
import Hero from "../../components/Hero.astro";
import QuickStart from "../../components/QuickStart.astro";
import { conceptPagePath } from "../../lib/utils";
import Related from "../../components/Related.astro";
import ExternalSources from "../../components/ExternalSources.astro";
import Separator from "../../components/Separator.astro";
import FeedbackBar from "../../components/FeedbackBar.astro";
import A from "../../components/mdx/A.astro";
import H2 from "../../components/mdx/H2.astro";
import H3 from "../../components/mdx/H3.astro";
import H4 from "../../components/mdx/H4.astro";
import { getConceptPagesAlphabetical } from "../../content/collections";

export const getStaticPaths = (async () => {
  return (await getConceptPagesAlphabetical()).map((page) => ({
    params: { slug: page.slug },
    props: { page },
  }));
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const {
  data: { title, snippet, externalSources, related },
} = page;
const { Content } = await page.render();

const relatedConceptPages: { title: string; href: string }[] = (
  await getConceptPagesAlphabetical()
)
  .filter(({ slug }) => related.includes(slug))
  .map(({ slug, data: { title } }) => {
    return { title, href: conceptPagePath(slug) };
  });
---

<Layout {title} description={snippet}>
  <HorizontalContainer>
    <Hero
      {title}
      description={snippet}
      breadcrumb={{ back: { title: "Concepts", href: "/concepts" }, title }}
    />

    <QuickStart />

    <div class="space-y-8 md:space-y-10 lg:space-y-12">
      <div class="prose dark:prose-invert lg:prose-lg xl:prose-xl xmax-w-none">
        <Content
          components={{
            a: A,
            h2: H2,
            h3: H3,
            h4: H4,

            Admonition,
            ExternalSources,
            NixStorePath,
          }}
        />
      </div>

      {
        relatedConceptPages.length > 0 && (
          <Related related={relatedConceptPages} />
        )
      }

      {
        externalSources && externalSources.length > 0 && (
          <ExternalSources links={externalSources} showTitle />
        )
      }

      <div class="mt-16 space-y-12">
        <Separator />
        <FeedbackBar />
      </div>
    </div>
  </HorizontalContainer>
</Layout>
